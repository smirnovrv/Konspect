#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

//Основная процедура,
//Добавляет начальную (пустую) страницу или формирует имеющие в ТЧ Поля
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ПолучитьКоличествоСтрокПолей() = 0 Тогда
 		ДобавитьНачальнуюСтраницуHTML();	
	КонецЕсли;
	
	Объект.ОсновнойТекст = СформироватьОсновнойТекст(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)	
	
//	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ЗаметкиФайлы") Тогда
//		Структура = СформироватьСтруктуруДляВставкиФайла(ВыбранноеЗначение);
//	КонецЕсли;	
	
// 	ДобавитьСтрокуHTML(Структура); 
//	
//	Объект.ОсновнойТекст 	= СформироватьОсновнойТекст(Неопределено);	
//	
//	Модифицированность 		= Истина;


КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РедактироватьПриИзменении(Элемент)
	Если Редактировать = Истина Тогда		
		Элементы.ГруппаОсновнойтекст.Видимость = Ложь;
		Элементы.ГруппаСтруткура.Показать();
	Иначе
		Элементы.ГруппаОсновнойтекст.Видимость = Истина;
		Элементы.ГруппаСтруткура.Скрыть();

		Если Не ТекстСтроки = "" Тогда			
			ТекСтрока = Объект.Поля.Получить(Элементы.Поля.ТекущаяСтрока);
			ТекСтрока.Значение = ТекстСтроки;
			
			СтруктураДляВставки = Новый Структура();
			СтруктураДляВставки.Вставить("Номер"		, ТекСтрока.НомерСтроки); 
			СтруктураДляВставки.Вставить("текстСтроки"	, ТекстСтроки); 
			
			Модифицированность = Истина;
			Объект.ОсновнойТекст = СформироватьОсновнойТекст(СтруктураДляВставки);
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТекстСтрокиОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ИзменитьТекстСтроки(Текст);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПоля

&НаКлиенте
Процедура ПоляПриАктивизацииСтроки(Элемент)
	
	ТекСтрока = Элемент.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтрока.Картинка) Тогда
		СтрокаВставкиРазмера = "' width='"+ТекСтрока.Ширина+"' height='"+ТекСтрока.Высота+"'>";
		ТекстСтроки 	= ТекСтрока.Значение;
		ТекстДляВставки = "<img src='data:image/;base64," + Base64ДанныеСервер(ТекСтрока.Картинка)+СтрокаВставкиРазмера;
		ТекстСтрокиHTML = ВставкаДляСтрокиТекста(ТекстДляВставки);
	Иначе	
		ИзменитьТекстСтроки(Неопределено);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПоляШиринаПриИзменении(Элемент)
	ПоискШирина = СтрНайти(ТекстСтрокиHTML,"width");
	ПоискВысота = СтрНайти(ТекстСтрокиHTML,"height");
	Разница 	= ПоискВысота - ПоискШирина;
	Если ПоискШирина > 0 Тогда 
		СтрокаДляЗамены = Сред(ТекстСтрокиHTML, ПоискШирина, Разница-1);
		СтрокаЗамены 	= "width='"+Элементы.Поля.ТекущиеДанные.Ширина+"'";
	КонецЕсли;	
	ТекстСтрокиHTML = СтрЗаменить(ТекстСтрокиHTML, СтрокаДляЗамены, СтрокаЗамены); 
КонецПроцедуры

&НаКлиенте
Процедура ПоляВысотаПриИзменении(Элемент)
	ПоискВысота = СтрНайти(ТекстСтрокиHTML,"height");
	ПоискСтиль 	= СтрНайти(ТекстСтрокиHTML,"style");
	Разница 	= ПоискСтиль - ПоискВысота;

	Если ПоискВысота > 0 Тогда
		СтрокаДляЗамены = Сред(ТекстСтрокиHTML, ПоискВысота, Разница-1);
		СтрокаЗамены 	= "height='"+Элементы.Поля.ТекущиеДанные.Высота+"'";
	КонецЕсли;
	ТекстСтрокиHTML = СтрЗаменить(ТекстСтрокиHTML, СтрокаДляЗамены, СтрокаЗамены); 
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаВвестиТекст(Команда)
	СтрутураПараметров = Новый Структура;	
	ОткрытьФорму("Справочник.Заметки.Форма.ФормаРедактирования", СтрутураПараметров, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЖирный(Команда)
    Структура = СформироватьСтруктуруФорматированиТекста();
    Структура.Вставить("Символ", "b");
    
	ИзменитьВыделенное(Структура);
КонецПроцедуры

&НаКлиенте
Процедура КомандаКурсив(Команда)
	Структура = СформироватьСтруктуруФорматированиТекста();
	Структура.Вставить("Символ", "i");
	
	ИзменитьВыделенное(Структура);
КонецПроцедуры

&НаКлиенте
Процедура КомандаПодчеркнутый(Команда) 
	Структура = СформироватьСтруктуруФорматированиТекста();
	Структура.Вставить("Символ", "u");
	
	ИзменитьВыделенное(Структура);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗачеркнутый(Команда)
	Структура = СформироватьСтруктуруФорматированиТекста();
	Структура.Вставить("Символ", "s");
	
	ИзменитьВыделенное(Структура);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗнакМеньше(Команда) 	
	Структура = Новый Структура("Символ, Одиночный, Спесимвол, МестоВставки","&lt; ", Истина, Истина, "Перед");
	ИзменитьВыделенное(Структура);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗнакБольше(Команда)
	Структура = Новый Структура("Символ, Одиночный, Спесимвол, МестоВставки"," &gt;", Истина, Истина, "После");
	ИзменитьВыделенное(Структура);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗагрузитьКартинку(Команда)
	Диалог = новый ПараметрыДиалогаПомещенияФайлов("Выберите файл картинки", Ложь,);
		
	Оповещение = новый ОписаниеОповещения("ПослеЗакрытияДиалогаВыбора", ЭтотОбъект);
	
	НачатьПомещениеФайлаНаСервер(Оповещение,,,, Диалог, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьКартинку(Команда)
	ЗначениеОтбора = Новый Структура("ВладелецФайла", Объект.Ссылка);
	ПараметрыФормы = Новый Структура("Отбор"		, ЗначениеОтбора);
	
	ОткрытьФорму("Справочник.ЗаметкиФайлы.Форма.ФормаВыбора", ПараметрыФормы, ЭтотОбъект);
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеЗакрытияДиалогаВыбора (ОписаниеФайла, ДопПараметры) Экспорт
	
	Если ОписаниеФайла = Неопределено Тогда
		Возврат;
	КОнецЕсли;
	
	СсылкаНаОбъект 	= Объект.Ссылка;
	Расширение 		= ОписаниеФайла.СсылкаНаФайл.Расширение;
	Структура 		= Новый Структура();
	Структура.Вставить("Адрес", 		ОписаниеФайла.Адрес);
	Структура.Вставить("Владелец", 		СсылкаНаОбъект);
	Структура.Вставить("Имя", 			ОписаниеФайла.СсылкаНаФайл.Файл.ИмяБезРасширения);
	Структура.Вставить("Расширение", 	Расширение);	
	 
	СсылкаФайл	= СохранитьФайлВХранилище(Структура);
	НомерСтроки = ПолучитьНомерСтрокиДляВставки();
	
	Структура = Новый Структура;
 	Структура.Вставить("ТекстДобавления", ОписаниеФайла.СсылкаНаФайл.Имя);
 	Структура.Вставить("НомерСтроки"	, НомерСтроки-1);
 	Структура.Вставить("Вставка"		, Истина);
 	Структура.Вставить("Тэг"			, ПолучитьТэгКартинки(Расширение));
 	Структура.Вставить("Картинка"		, СсылкаФайл);
 	
 	 ДобавитьСтрокуHTML(Структура); 
	
	Объект.ОсновнойТекст 	= СформироватьОсновнойТекст(Неопределено);	
	
	Модифицированность 		= Истина;

КонецПроцедуры

&НаСервере
Функция СохранитьФайлВХранилище(Структура)
	
	НовФайл = Справочники.ЗаметкиФайлы.СоздатьЭлемент();
	НовФайл.ВладелецФайла 		= Структура.Владелец;
	НовФайл.Наименование 		= Структура.Имя;
	НовФайл.Расширение			= Структура.Расширение;
	НовФайл.ДатаСоздания 		= ТекущаяДатаСеанса();
	НовФайл.ФайлХранилище 		= Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(Структура.Адрес));
	НовФайл.Записать();
	
	Возврат НовФайл.Ссылка;
КонецФункции

&НаСервере
Функция ПолучитьТэгКартинки(Расширение)	
	Если ЭтоКартинка(Расширение) Тогда
		ТэгКартинки = Справочники.Тэги.img;
	Иначе
		ТэгКартинки = Справочники.Тэги.File;
	КонецЕсли;	
		
	Возврат ТэгКартинки;	
	
КонецФункции

&НаСервере
Функция ЭтоКартинка(Расширение)
	
	ЭтоКартинка = Ложь;
	
	Если Расширение = ".jpeg" 
		Или Расширение = ".jpg"
		Или Расширение = ".gif"
		Или Расширение = ".bmp"
		Или Расширение = ".svg"
		Или Расширение = ".png" Тогда
		
		ЭтоКартинка = Истина;	
	КонецЕсли;
			
	Возврат ЭтоКартинка;		
КонецФункции

//&НаСервере
//Функция СформироватьСтруктуруДляВставкиФайла(СсылкаФайл)
//	НомерСтроки = ПолучитьНомерСтрокиДляВставки();
//	
//	Структура = Новый Структура();	
// 	Структура.Вставить("ТекстДобавления", СсылкаФайл.Наименование);
// 	Структура.Вставить("НомерСтроки"	, НомерСтроки-1);
// 	Структура.Вставить("Вставка"		, Истина);
// 	Структура.Вставить("Тэг"			, ПолучитьТэгКартинки(СсылкаФайл.Расширение));
// 	Структура.Вставить("Картинка"		, СсылкаФайл);
//
//	Возврат Структура;
//КонецФункции
	
&НаКлиенте
Процедура ИзменитьТекстСтроки(ТекстВставки)
	  
	Если ТекстВставки = Неопределено Тогда
		СтрокаТаб = Элементы.Поля.ТекущиеДанные;

		Структура = Новый Структура();
		Структура.Вставить("Тэг"			, СтрокаТаб.Тэг);
		Структура.Вставить("Картинка"		, СтрокаТаб.Картинка);
		Структура.Вставить("Ширина"			, СтрокаТаб.Ширина);
		Структура.Вставить("Высота"			, СтрокаТаб.Высота);	
		Структура.Вставить("Значение"		, СтрокаТаб.Значение);
		Структура.Вставить("НомерСтроки"	, СтрокаТаб.НомерСтроки);
		
		Если ЗначениеЗаполнено(СтрокаТаб.Тэг) Тогда
			Структура.Вставить("ОдиночныйТэг"	, ОдиночныйТэг(СтрокаТаб.Тэг));
			Структура.Вставить("ТэгНаименование", СТрока(СтрокаТаб.Тэг));
		Иначе
			Структура.Вставить("ОдиночныйТэг"	, Ложь);
			Структура.Вставить("ТэгНаименование", Неопределено);
		КонецЕсли;	

		Если ЗначениеЗаполнено(СтрокаТаб.Тэг) Тогда
			ТекстВставки = СформироватьТекстДляВставки(Структура);
			Элементы.ТекстСтроки.Доступность = Истина;
		Иначе
			ТекстВставки = "Нет редактируется";
			Элементы.ТекстСтроки.Доступность = Ложь;
		КонецЕсли;
		ТекстСтроки  	= СтрокаТаб.Значение;
	Иначе
		ТекстСтроки  	= ТекстВставки;
		ТекстВставки 	= СтрЗаменить(ТекстВставки, Символы.ПС, "<br>");
	КонецЕсли;	
	
	ТекстСтрокиHTML = ВставкаДляСтрокиТекста(ТекстВставки);

 КонецПроцедуры
  
  &НаСервере
  Функция ОдиночныйТэг(Тэг)
  	
  	Возврат Тэг.Одиночный;
  	
  КонецФункции
  
 &НаКлиенте
 Функция СформироватьСтруктуруФорматированиТекста()
 	Возврат  Новый Структура("Одиночный, Спесимвол, МестоВставки", Ложь, Ложь, Ложь);
 КонецФункции
 
// Изменить выделенное.
// Модифицирует выделенный текст 
// 
// Параметры:
//  Структура - Структура - Структура:
// * Одиночный - Булево - 
// * Спесимвол - Булево - 
// * МестоВставки - Булево - 
// * Символ - Строка - 
&НаКлиенте
Процедура ИзменитьВыделенное(Структура)
	
	ВыделенныйТекстДо = Элементы.ТекстСтрокиРасширеннаяПодсказка.Родитель.ВыделенныйТекст;

	Если Не ВыделенныйТекстДо = "" Тогда
		Если Структура.Одиночный Тогда 
			Если Структура.Спесимвол Тогда
				Если Структура.МестоВставки = "Перед" Тогда
					ВыделенныйТекст = Структура.Символ + ВыделенныйТекстДо;
				Иначе
					ВыделенныйТекст = ВыделенныйТекстДо + Структура.Символ;	
				КонецЕсли;		
			иначе
				ВыделенныйТекст = "<" + Структура.Символ + ">" + ВыделенныйТекстДо;	
			КонецЕсли;	
		Иначе
			ВыделенныйТекст = "<" + Структура.Символ + ">" + ВыделенныйТекстДо + "</" + Структура.Символ + ">";
		КонецЕсли;

		Элементы.ТекстСтрокиРасширеннаяПодсказка.Родитель.ВыделенныйТекст = "";
		Элементы.ТекстСтрокиРасширеннаяПодсказка.Родитель.ВыделенныйТекст = ВыделенныйТекст;

		ТекстВставки = Элементы.Поля.ТекущиеДанные.Значение;
		ТекстВставки = СтрЗаменить(ТекстВставки, ВыделенныйТекстДо, ВыделенныйТекст);
		ТекстВставки = СтрЗаменить(ТекстВставки, Символы.ПС, "<br>");

		ТекстСтрокиHTML = ВставкаДляСтрокиТекста(ТекстВставки);
	КонецЕсли;
	
КонецПроцедуры   	

// Получить номер строки для вставки.
// Ищет номер строки перед закрытие секции body
// 
// Возвращаемое значение:
//  Число - Получить номер строки для вставки
&НаСервере
Функция ПолучитьНомерСтрокиДляВставки()
	
	Отбор = Новый Структура();
	Отбор.Вставить("Значение", "</body>");
	 
	ПоискБоди = Объект.Поля.НайтиСтроки(Отбор);
	
	Если ПоискБоди = Неопределено Тогда
		НомерСтроки = ПолучитьКоличествоСтрокПолей();
	Иначе
		НомерСтроки = ПоискБоди[0].НомерСтроки	
	КонецЕсли;			
	
	Возврат НомерСтроки;
	
КонецФункции

// Получить количество строк полей.
// 
// Возвращаемое значение:
//  Число - Получить количество строк полей
&НаСервере
Функция ПолучитьКоличествоСтрокПолей()
	Возврат Объект.Поля.Количество();
КонецФункции

 // Добавить начальную страницу HTML.
 //Формируют пустую струткура Основного текста - HTML документа
 &НаСервере
 Процедура ДобавитьНачальнуюСтраницуHTML()
 	Структура = Новый Структура;
 	
 	Структура.Вставить("Вставка", Ложь); 
 	Структура.Вставить("НомерСтроки"	, 0);
  	Структура.Вставить("Тэг"			, Неопределено);
	
 	Структура.Вставить("ТекстДобавления", "<!DOCTYPE html>");
 	ДобавитьСтрокуHTML(Структура); 
 	
 	Структура.Вставить("ТекстДобавления", "<html lang=""ru"">");
 	ДобавитьСтрокуHTML(Структура); 
 	
 	ТекстДобавления = ДобавитьHead();
 		
 	Структура.Вставить("ТекстДобавления", ТекстДобавления);
 	ДобавитьСтрокуHTML(Структура); 
 	
 	Структура.Вставить("ТекстДобавления", "<body>");
 	ДобавитьСтрокуHTML(Структура); 
 	
 	Структура.Вставить("ТекстДобавления", "</body>");
 	ДобавитьСтрокуHTML(Структура); 
 	
 	Структура.Вставить("ТекстДобавления", "</html>");
 	ДобавитьСтрокуHTML(Структура); 
 
 КонецПроцедуры
 
  // Добавить head.
  //Добавляет секцию head
  // 
  // Возвращаемое значение:
  //  Строка - секция head
  &НаСервере
 Функция ДобавитьHead()
 	ТекстКоментария = "";
 	ТекстКоментария = ТекстКоментария + "<head>";
 	ТекстКоментария = ТекстКоментария + Символы.ПС + "	<meta charset=""UTF-8""" + ">";
 	ТекстКоментария = ТекстКоментария + Символы.ПС + "	<title>" + Объект.Наименование + "</title>";
 	ТекстКоментария = ТекстКоментария + Символы.ПС + "</head>";
 	
 	Возврат ТекстКоментария; 
 КонецФункции
 
  // Добавить строку HTML.
  // Новая строка в ТЧ 
  //
  // Параметры:
  //  Структура - Структура - Структура:
  // * Вставка - Булево - 
  // * НомерСтроки - Число - 
  // * Тэг - Неопределено - 
  // * ТекстДобавления - Строка - 
  &НаСервере
 Процедура ДобавитьСтрокуHTML(Структура)
 	Если Структура.Вставка Тогда
 		НоваяСтрока = Объект.Поля.Вставить(Структура.НомерСтроки);
 	Иначе	
 		НоваяСтрока = Объект.Поля.Добавить();	
 	КонецЕсли;
 	
 	Если Структура.Тэг.Наименование = "img" Тогда
		Если Структура.Свойство("Картинка") Тогда
			НоваяСтрока.Картинка = Структура.Картинка;
		КонецЕсли;
	КонецЕсли;
 			
 	НоваяСтрока.Значение = Структура.ТекстДобавления; 
	Если Не Структура.Тэг = Неопределено Тогда  
 		НоваяСтрока.Тэг      = Структура.Тэг;
	КонецЕсли;
	
 КонецПроцедуры
 
  // Сформировать основной текст.
  // Формирует страницу html
  //
  &НаСервере
Функция СформироватьОсновнойТекст(СтруктураДляВставки)
	
	ОсновнойТекст 	= "";
	
	//Выгрузим в ТЧ, что бы можно было искать и вставлять строки - динамически, без записи Объекта
	ТабИзмСтрок 	= Объект.Поля.Выгрузить();
	
	//++ Если есть динамическое изменение, вставим его в Таблицу
	Если Не СтруктураДляВставки = Неопределено Тогда
		СтрокаТЧДляРедактирование = ТабИзмСтрок.Найти(СтруктураДляВставки.Номер, "НомерСтроки");
		Если Не СтрокаТЧДляРедактирование = Неопределено Тогда
			СтрокаТЧДляРедактирование.Значение = СтруктураДляВставки.текстСтроки;
		КонецЕсли;
	КонецЕсли;
	//-- 
	
	//++ Обходим таблицу и формируем HTML
	Для Каждого СтрокаТаб Из ТабИзмСтрок Цикл
		
		Структура = Новый Структура();
		Структура.Вставить("Тэг"			, СтрокаТаб.Тэг);
		Структура.Вставить("ОдиночныйТэг"	, СтрокаТаб.Тэг.Одиночный);
		Структура.Вставить("Картинка"		, СтрокаТаб.Картинка);
		Структура.Вставить("Ширина"			, СтрокаТаб.Ширина);
		Структура.Вставить("Высота"			, СтрокаТаб.Высота);
		Структура.Вставить("ТэгНаименование", СтрокаТаб.Тэг.Наименование);
		Структура.Вставить("Значение"		, СтрокаТаб.Значение);
		Структура.Вставить("НомерСтроки"	, СтрокаТаб.НомерСтроки);
		
		//++ Формируем текст html, для каждой строки
		ТекстДляВставки = СформироватьТекстДляВставки(Структура);
		ОсновнойТекст = ОсновнойТекст + ТекстДляВставки;
	КонецЦикла;
	//--
	
	Возврат ОсновнойТекст;
	
КонецФункции

// Сформировать текст для вставки.
// Для строки по номеру, преобразует текс в формат html
// 
// Параметры:
//  НомерСтроки - Число - Номер строки ТЧ
// 
&НаСервере
Функция СформироватьТекстДляВставки(СтруктураТЧ)

	ТекстДляВставки = "";

	Если ЗначениеЗаполнено(СтруктураТЧ.Тэг) Тогда

		Если СтруктураТЧ.ОдиночныйТэг Тогда
			ТекстДляВставки = ПолучитьТекстДляВставки_Одиночный(СтруктураТЧ);
		Иначе
			ТекстДляВставки = ПолучитьТекстДляВставки_Двойной(СтруктураТЧ);
		КонецЕсли;
	Иначе //Без тегов
		ТекстДляВставки = СтруктураТЧ.Значение;
	КонецЕсли;

	Возврат ТекстДляВставки;
КонецФункции

//Текст Html для картинки, файла
//
&НаСервере
Функция ПолучитьТекстДляВставки_Одиночный(Структура)
	Если ЗначениеЗаполнено(Структура.Картинка) Тогда	
		Если Структура.Тэг.Наименование	= "img" Тогда			
			ТекстДляВставки = ПолучитьТекстДляВставки_Картинки(Структура);
		Иначе
//			ТекстДляВставки = "<p><a href=""path/to/file"">" + СтрокаТЧ.Картинка.Наименование + " (файл " + СтрокаТЧ.НомерСтроки + ")</a></p>"; //- файл
		КонецЕсли;
	Иначе
		ТекстДляВставки = "<" + Структура.Наименование + " >" + Структура.Значение; //не картинка 
	КонецЕсли;
	
	Возврат ТекстДляВставки;
КонецФункции

&НаСервере
Функция ПолучитьТекстДляВставки_Двойной(Структура)
//	Если ЗначениеЗаполнено(СтрокаТЧ.Якорь) Тогда
//		ТекстДляВставки = ПолучитьТекстдляВставки_Якорь(СтрокаТЧ);	
//	Иначе
		//добвим css style и id
		ТекстДляВставки = ПолучитьТекстДляВставкиФормата(Структура);
	//КонецЕсли;
	
	Возврат ТекстДляВставки;
КонецФункции

 &НаСервере
Функция ПолучитьТекстДляВставки_Картинки(Структура)
					
	//3-й способ вывести картинку					
	ТекстДляВставки = "";

	Base64Данные 	= Структура.Картинка.Base64Данные;

	Ширина 	= "350";
	Высота 	= "450";
	Высота 	= ?(Структура.Высота = 0, Высота, Структура.Высота);
	Ширина 	= ?(Структура.Ширина = 0, Ширина, Структура.Ширина);
	
	 
	СтрокаВставкиРазмера = "' width='"+Ширина+"' height='"+Высота+"'>";
	ТекстДляВставки = "<p></p>";
	ТекстДляВставки = ТекстДляВставки + "<img src='data:image/;base64," + Base64Данные + СтрокаВставкиРазмера;
   //ТекстДляВставки = ТекстДляВставки + "<img src='data:image/;base64," + Base64Данные+"'>";
	
	ТекстДляВставки = СтрЗаменить(ТекстДляВставки, "'>", "'  style = 'margin-left: 40px'>");
	
	Возврат ТекстДляВставки;
	
КонецФункции

// Получить текст для вставки формата.
// Фоматирует текс в формат html определенного вида
// 
// Возвращаемое значение:
//  Строка - формата html + css
&НаСервере
Функция ПолучитьТекстДляВставкиФормата(Структура)
	ТекстДляВставки = "";
	
	ТекстВставки = СтрЗаменить(Структура.Значение,Символы.ПС ,"<br>");
	ТекстДляВставки =  
		"<" + Структура.ТэгНаименование 
		+ " id=" + Структура.НомерСтроки
		+ " style = 'margin-left: 40px';>"
		+ ТекстВставки 
		+ "</" 
		+ Структура.ТэгНаименование 
		+ ">";
	
	Возврат ТекстДляВставки
	
КонецФункции

// Вставки для строки текста.
// Формирует мини страницу html для строки ТЧ
// 
// Параметры:
//  ТекстВставки - Строка - Текст вставки
// 
// Возвращаемое значение:
//  Строка - Вставки для строки текста
&НаСервере
Функция ВставкаДляСтрокиТекста(ТекстВставки)
	ТекстДляВставки = "";
	
	ТекстДляВставки = "<!DOCTYPE html>"
	+ "<html lang=""ru"">"
	+ "<head>" 
	+ "	<meta charset=""UTF-8""" + ">"
	+ "	<title> </title>"
	+ "</head>"
	+"<body>"
	+ ТекстВставки
	+ "</body>" 
	+ "</html>"
	;
	
	Возврат ТекстДляВставки
	
КонецФункции 	

&НаСервере
Функция Base64ДанныеСервер(Картинка)	
	Возврат Картинка.Base64Данные;
КонецФункции

#КонецОбласти

