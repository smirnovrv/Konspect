#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ПолучитьКоличествоСтрокПолей() = 0 Тогда
 		ДобавитьНачальнуюСтраницуHTML();	
	КонецЕсли;
	
	Объект.ОсновнойТекст = СформироватьОсновнойТекст();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)	
	
	НомерСтроки = ПолучитьНомерСтрокиДляВставки();
	
	Структура = Новый Структура;
 	Структура.Вставить("ТекстДобавления", ВыбранноеЗначение.ВведенныйТекст);
 	Структура.Вставить("НомерСтроки"	, НомерСтроки-1);
 	Структура.Вставить("Вставка"		, Истина);
 	Структура.Вставить("Тэг"			, ВыбранноеЗначение.Тэг);
 	
 	ДобавитьСтрокуHTML(Структура); 
	
	Объект.ОсновнойТекст 	= СформироватьОсновнойТекст();	
	
	Модифицированность 		= Истина;

КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура РедактироватьПриИзменении(Элемент)
	Если Редактировать = Истина Тогда		
		Элементы.ГруппаОсновнойтекст.Видимость = Ложь;
		Элементы.ГруппаСтруткура.Показать();
	Иначе
		Элементы.ГруппаОсновнойтекст.Видимость = Истина;;
		Элементы.ГруппаСтруткура.Скрыть();		
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПоля

&НаКлиенте
Процедура ПоляПриАктивизацииСтроки(Элемент)
	
	ИзменитьТекстСтроки();
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаВвестиТекст(Команда)
	СтрутураПараметров = Новый Структура;	
	ОткрытьФорму("Справочник.Заметки.Форма.ФормаРедактирования", СтрутураПараметров, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЖирный(Команда)
    Структура = СформироватьСтруктуруФорматированиТекста();
    Структура.Вставить("Символ", "b");
    
	ИзменитьВыделенное(Структура);
КонецПроцедуры

&НаКлиенте
Процедура КомандаКурсив(Команда)
	Структура = СформироватьСтруктуруФорматированиТекста();
	Структура.Вставить("Символ", "i");
	
	ИзменитьВыделенное(Структура);
КонецПроцедуры

&НаКлиенте
Процедура КомандаПодчеркнутый(Команда) 
	Структура = СформироватьСтруктуруФорматированиТекста();
	Структура.Вставить("Символ", "u");
	
	ИзменитьВыделенное(Структура);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗачеркнутый(Команда)
	Структура = СформироватьСтруктуруФорматированиТекста();
	Структура.Вставить("Символ", "s");
	
	ИзменитьВыделенное(Структура);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗнакМеньше(Команда) 	
	Структура = Новый Структура("Символ, Одиночный, Спесимвол, МестоВставки","&lt; ", Истина, Истина, "Перед");
	ИзменитьВыделенное(Структура);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗнакБольше(Команда)
	Структура = Новый Структура("Символ, Одиночный, Спесимвол, МестоВставки"," &gt;", Истина, Истина, "После");
	ИзменитьВыделенное(Структура);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ИзменитьТекстСтроки()
	  
	ТекСтрока = Элементы.Поля.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекСтрока.Тэг) Тогда
		ТекстВставки = СформироватьТекстДляВставки(Элементы.Поля.ТекущаяСтрока+1); 
		Элементы.ТекстСтроки.Доступность = Истина;
	Иначе
		ТекстВставки = "Нет редактируется";
		Элементы.ТекстСтроки.Доступность = Ложь;
	КонецЕсли;
	ТекстСтроки  	= ТекСтрока.Значение;
	ТекстСтрокиHTML = ВставкиДляСтрокиТекста(ТекстВставки);

 КонецПроцедуры
  
 &НаКлиенте
 Функция СформироватьСтруктуруФорматированиТекста()
 	Возврат  Новый Структура("Одиночный, Спесимвол, МестоВставки", Ложь, Ложь, Ложь);
 КонецФункции
 
// Изменить выделенное.
// Модифицирует выделенный текст 
// 
// Параметры:
//  Структура - Структура - Структура:
// * Одиночный - Булево - 
// * Спесимвол - Булево - 
// * МестоВставки - Булево - 
// * Символ - Строка - 
&НаКлиенте
Процедура ИзменитьВыделенное(Структура)
	
	ВыделенныйТекстДо = Элементы.ТекстСтрокиРасширеннаяПодсказка.Родитель.ВыделенныйТекст;

	Если Не ВыделенныйТекстДо = "" Тогда
		Если Структура.Одиночный Тогда 
			Если Структура.Спесимвол Тогда
				Если Структура.МестоВставки = "Перед" Тогда
					ВыделенныйТекст = Структура.Символ + ВыделенныйТекстДо;
				Иначе
					ВыделенныйТекст = ВыделенныйТекстДо + Структура.Символ;	
				КонецЕсли;		
			иначе
				ВыделенныйТекст = "<" + Структура.Символ + ">" + ВыделенныйТекстДо;	
			КонецЕсли;	
		Иначе
			ВыделенныйТекст = "<" + Структура.Символ + ">" + ВыделенныйТекстДо + "</" + Структура.Символ + ">";
		КонецЕсли;

		Элементы.ТекстСтрокиРасширеннаяПодсказка.Родитель.ВыделенныйТекст = "";
		Элементы.ТекстСтрокиРасширеннаяПодсказка.Родитель.ВыделенныйТекст = ВыделенныйТекст;

		ТекстВставки = Элементы.Поля.ТекущиеДанные.Значение;
		ТекстВставки = СтрЗаменить(ТекстВставки, ВыделенныйТекстДо, ВыделенныйТекст);
		ТекстВставки = СтрЗаменить(ТекстВставки, Символы.ПС, "<br>");

		ТекстСтрокиHTML = ВставкиДляСтрокиТекста(ТекстВставки);
	КонецЕсли;
	
КонецПроцедуры   	

// Получить номер строки для вставки.
// Ищет номер строки перед закрытие секции body
// 
// Возвращаемое значение:
//  Число - Получить номер строки для вставки
&НаСервере
Функция ПолучитьНомерСтрокиДляВставки()
	
	Отбор = Новый Структура();
	Отбор.Вставить("Значение", "</body>");
	 
	ПоискБоди = Объект.Поля.НайтиСтроки(Отбор);
	
	Если ПоискБоди = Неопределено Тогда
		НомерСтроки = ПолучитьКоличествоСтрокПолей();
	Иначе
		НомерСтроки = ПоискБоди[0].НомерСтроки	
	КонецЕсли;			
	
	Возврат НомерСтроки;
	
КонецФункции

// Получить количество строк полей.
// 
// Возвращаемое значение:
//  Число - Получить количество строк полей
&НаСервере
Функция ПолучитьКоличествоСтрокПолей()
	Возврат Объект.Поля.Количество();
КонецФункции

 // Добавить начальную страницу HTML.
 //Формируют пустую струткура Основного текста - HTML документа
 &НаСервере
 Процедура ДобавитьНачальнуюСтраницуHTML()
 	Структура = Новый Структура;
 	
 	Структура.Вставить("Вставка", Ложь); 
 	Структура.Вставить("НомерСтроки"	, 0);
  	Структура.Вставить("Тэг"			, Неопределено);
	
 	Структура.Вставить("ТекстДобавления", "<!DOCTYPE html>");
 	ДобавитьСтрокуHTML(Структура); 
 	
 	Структура.Вставить("ТекстДобавления", "<html lang=""ru"">");
 	ДобавитьСтрокуHTML(Структура); 
 	
 	ТекстДобавления = ДобавитьHead();
 		
 	Структура.Вставить("ТекстДобавления", ТекстДобавления);
 	ДобавитьСтрокуHTML(Структура); 
 	
 	Структура.Вставить("ТекстДобавления", "<body>");
 	ДобавитьСтрокуHTML(Структура); 
 	
 	Структура.Вставить("ТекстДобавления", "</body>");
 	ДобавитьСтрокуHTML(Структура); 
 	
 	Структура.Вставить("ТекстДобавления", "</html>");
 	ДобавитьСтрокуHTML(Структура); 
 
 КонецПроцедуры
 
  // Добавить head.
  //Добавляет секцию head
  // 
  // Возвращаемое значение:
  //  Строка - секция head
  &НаСервере
 Функция ДобавитьHead()
 	ТекстКоментария = "";
 	ТекстКоментария = ТекстКоментария + "<head>";
 	ТекстКоментария = ТекстКоментария + Символы.ПС + "	<meta charset=""UTF-8""" + ">";
 	ТекстКоментария = ТекстКоментария + Символы.ПС + "	<title>" + Объект.Наименование + "</title>";
 	ТекстКоментария = ТекстКоментария + Символы.ПС + "</head>";
 	
 	Возврат ТекстКоментария; 
 КонецФункции
 
  // Добавить строку HTML.
  // Новая строка в ТЧ 
  //
  // Параметры:
  //  Структура - Структура - Структура:
  // * Вставка - Булево - 
  // * НомерСтроки - Число - 
  // * Тэг - Неопределено - 
  // * ТекстДобавления - Строка - 
  &НаСервере
 Процедура ДобавитьСтрокуHTML(Структура)
 	Если Структура.Вставка Тогда
 		НоваяСтрока = Объект.Поля.Вставить(Структура.НомерСтроки)
 	Иначе	
 		НоваяСтрока = Объект.Поля.Добавить();	
 	КонецЕсли;
 	
 	НоваяСтрока.Значение = Структура.ТекстДобавления; 
	Если Не Структура.Тэг = Неопределено Тогда  
 		НоваяСтрока.Тэг      = Структура.Тэг;
	КонецЕсли;
	
 КонецПроцедуры
 
  // Сформировать основной текст.
  // ФОрмирует страницу html
  //
  // Возвращаемое значение:
  //  Строка - Станица html
  &НаСервере
Функция СформироватьОсновнойТекст()
	
	ОсновнойТекст = "";
	
	Для Каждого СтрокаТЧ Из Объект.Поля Цикл
			ТекстДляВставки = СформироватьТекстДляВставки(СтрокаТЧ.НомерСтроки);
			ОсновнойТекст = ОсновнойТекст + ТекстДляВставки;
	КонецЦикла;
	 
	Возврат ОсновнойТекст;
	
КонецФункции

// Сформировать текст для вставки.
// Для строки по номеру, преобразует текс в формат html
// 
// Параметры:
//  НомерСтроки - Число - Номер строки
// 
// Возвращаемое значение:
//  Строка - Сформировать текст для вставки
&НаСервере
Функция СформироватьТекстДляВставки(НомерСтроки)
	СтрокаТЧ = объект.Поля.Получить(НомерСтроки-1);
	ТекстДляВставки = "";
	Если ЗначениеЗаполнено(СтрокаТЧ.Тэг) Тогда
			текТэг 			= СтрокаТЧ.Тэг;
			ОдиночныйТэг 	= текТэг.Одиночный;
			
			Структура = Новый Структура();
			Структура.Вставить("Одиночный", 	ОдиночныйТэг);
			Структура.Вставить("Наименование", 	текТэг.Наименование);
			Структура.Вставить("Значение", 		СтрокаТЧ.Значение);
			Структура.Вставить("НомерСтроки", 	СтрокаТЧ.НомерСтроки);
			
			Если ОдиночныйТэг Тогда			
				ТекстДляВставки = ПолучитьТекстДляВставки_Одиночный(Структура);
			Иначе
				ТекстДляВставки = ПолучитьТекстДляВставки_Двойной(Структура);
			КонецЕсли;
		Иначе //Без тегов
			ТекстДляВставки = СтрокаТЧ.Значение;
		КонецЕсли;
		
		Возврат ТекстДляВставки;
КонецФункции

&НаСервере
Функция ПолучитьТекстДляВставки_Одиночный(Структура)
//	Если ЗначениеЗаполнено(СтрокаТЧ.Картинка) Тогда	
//		Если ЭтоКартинка(СтрокаТЧ.Картинка.Расширение) Тогда			
//			ТекстДляВставки = ПолучитьТекстДляВставки_Картинки(СтрокаТЧ);
//		Иначе
//			ТекстДляВставки = "<p><a href=""path/to/file"">" + СтрокаТЧ.Картинка.Наименование + " (файл " + СтрокаТЧ.НомерСтроки + ")</a></p>"; //- файл
//		КонецЕсли;
//	Иначе
		ТекстДляВставки = "<" + Структура.Наименование + " >" + Структура.Значение; //не картинка 
	//КонецЕсли;
	
	Возврат ТекстДляВставки;
КонецФункции

&НаСервере
Функция ПолучитьТекстДляВставки_Двойной(Структура)
//	Если ЗначениеЗаполнено(СтрокаТЧ.Якорь) Тогда
//		ТекстДляВставки = ПолучитьТекстдляВставки_Якорь(СтрокаТЧ);	
//	Иначе
		ТекстДляВставки = ПолучитьТекстДляВставкиФормата(Структура);
	//КонецЕсли;
	
	Возврат ТекстДляВставки;
КонецФункции

// Получить текст для вставки формата.
// Фоматирует текс в формат html определенного вида
// Параметры:
//  Структура - Структура - Структура:
// * Одиночный - Булево - 
// * Наименование - Строка - 
// * Значение - Строка - 
// * НомерСтроки - Число - 
// 
// Возвращаемое значение:
//  Строка - Получить текст для вставки формата
&НаСервере
Функция ПолучитьТекстДляВставкиФормата(Структура)
	ТекстДляВставки = "";
	
	ТекстВставки = СтрЗаменить(Структура.Значение,Символы.ПС ,"<br>");
	ТекстДляВставки =  
		"<" + Структура.Наименование 
		+ " id=" + Структура.НомерСтроки
		+ " style = 'margin-left: 40px';>"
		+ ТекстВставки 
		+ "</" 
		+ Структура.Наименование 
		+ ">";
	
	Возврат ТекстДляВставки
	
КонецФункции

// Вставки для строки текста.
// Формирует мини страницу html для строки ТЧ
// 
// Параметры:
//  ТекстВставки - Строка - Текст вставки
// 
// Возвращаемое значение:
//  Строка - Вставки для строки текста
&НаСервере
Функция ВставкиДляСтрокиТекста(ТекстВставки)
	ТекстДляВставки = "";
	
	ТекстДляВставки = "<!DOCTYPE html>"
	+ "<html lang=""ru"">"
	+ "<head>" 
	+ "	<meta charset=""UTF-8""" + ">"
	+ "	<title> </title>"
	+ "</head>"
	+"<body>"
	+ ТекстВставки
	+ "</body>" 
	+ "</html>"
	;
	
	Возврат ТекстДляВставки
	
КонецФункции 	

&НаКлиенте
Процедура ТекстСтрокиОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры
#КонецОбласти

