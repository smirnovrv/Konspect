#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

//Основная процедура,
//Добавляет начальную (пустую) страницу или формирует имеющие в ТЧ Поля
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 
	Если ПолучитьКоличествоСтрокПолей() = 0 Тогда
 		ДобавитьНачальнуюСтраницуHTML();	
	КонецЕсли;
	
	Объект.ОсновнойТекст = СформироватьОсновнойТекст();
	
	СоставВТаблицу();
КонецПроцедуры

//Основная процедура,
//Настраиваем видимость элементов на форме
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Структура = Новый Структура("Редактируется, Новыйтекст", Ложь, Ложь);
	УстановитьВидимость(Структура);
	
	ЭтоЗаголовок 		= Неопределено;
КонецПроцедуры

//Срабатывает при выборе из другого объекта, картинки 
//
&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)	
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ЗаметкиФайлы") Тогда
		Структура = СформироватьСтруктуруДляВставкиФайла(ВыбранноеЗначение);
	Иначе
		Структура = СформироватьСтруктуруДляВставки(ВыбранноеЗначение);
	КонецЕсли;	
	
 	ДобавитьСтрокуHTML(Структура); 
	
	Объект.ОсновнойТекст 	= СформироватьОсновнойТекст();	
	
	Модифицированность 		= Истина;

КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

//Когда редактирование закончено, 
//изменяем видимость элементов на форме
//обновляем основной HTML
//
&НаКлиенте
Процедура РедактироватьПриИзменении(Элемент)
	Структура = Новый Структура("Редактируется, Новыйтекст", Редактировать, Ложь);
	УстановитьВидимость(Структура);		
КонецПроцедуры

//Когда редактирование закончено,
//меняем текст конкретной, редактируемой строки
//
&НаКлиенте
Процедура ТекстСтрокиОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ИзменитьТекстСтрокиHTML(Текст, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ТемаПриИзменении(Элемент)
	ТемаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОсновнойТекстПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	 СтандартнаяОбработка = Ложь;
	 
	 Если ЗначениеЗаполнено(ДанныеСобытия.Href) Тогда    
		 Если Элементы.ПредпросмотрHTML.Видимость 	= Истина Тогда 
			 Элементы.ПредпросмотрHTML.Видимость 	= Ложь;
		 Иначе	
			 Элементы.ПредпросмотрHTML.Видимость 	= Истина;
		 КонецЕсли; 
		 
		 ЧтоИскать = "#Описание";  
		 
		 Если СтрНайти(ДанныеСобытия.Href, ЧтоИскать)>0 Тогда  
			ТекстВставки 		= ПолучитьОписаниеИзСтроки(ДанныеСобытия.Element.href);
			ПредпросмотрHTML 	= ВставкаДляСтрокиТекста(ТекстВставки);
		 ИначеЕсли Лев(ДанныеСобытия.Href, 3) = "e1c" Тогда 
			Элементы.ПредпросмотрHTML.Видимость 	= Ложь;
			ПерейтиПоНавигационнойСсылке(ДанныеСобытия.Href); 
		 Иначе
			ПредпросмотрHTML 	= ДанныеСобытия.Href;
		 КонецЕсли;
	 КонецЕсли;

КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСостав

//Заполняем поле ТекстСтрокиHTML
//
&НаКлиенте
Процедура ПоляПриАктивизацииСтроки(Элемент)
	ТекСтрока 	= Элемент.ТекущиеДанные;
	ТекстСтроки = ТекСтрока.Значение;
	ЭтоКартинка = Ложь;
	Если ЗначениеЗаполнено(ТекСтрока.Картинка) Тогда
		Ширина = ?(ТекСтрока.Ширина = 0, 500,ТекСтрока.Ширина);
		Высота = ?(ТекСтрока.Высота = 0, 300,ТекСтрока.Высота); 
		СтрокаВставкиРазмера 	= "' width='"+Ширина+"' height='"+Высота+"'>";
		ТекстДляВставки = "<img src='data:image/;base64," + Base64ДанныеСервер(ТекСтрока.Картинка)+СтрокаВставкиРазмера;
		ЭтоКартинка 	= Истина;
	Иначе
		ТекстДляВставки = Элемент.ТекущиеДанные.Значение;	
	КонецЕсли;
	
	ИзменитьТекстСтрокиHTML(ТекстДляВставки, ЭтоКартинка);
КонецПроцедуры

//Изменяем поле ТекстСтрокиHTML для картинки
//
&НаКлиенте
Процедура ПоляШиринаПриИзменении(Элемент)
	ПоискШирина = СтрНайти(ТекстСтрокиHTML,"width");
	ПоискВысота = СтрНайти(ТекстСтрокиHTML,"height");
	Разница 	= ПоискВысота - ПоискШирина;
	Если ПоискШирина > 0 Тогда 
		СтрокаДляЗамены = Сред(ТекстСтрокиHTML, ПоискШирина, Разница-1);
		СтрокаЗамены 	= "width='"+Элементы.Состав.ТекущиеДанные.Ширина+"'";
	КонецЕсли;	
	ТекстСтрокиHTML = СтрЗаменить(ТекстСтрокиHTML, СтрокаДляЗамены, СтрокаЗамены); 
КонецПроцедуры

//Изменяем поле ТекстСтрокиHTML для картинки
//
&НаКлиенте
Процедура ПоляВысотаПриИзменении(Элемент)
	ПоискВысота = СтрНайти(ТекстСтрокиHTML,"height");
	ПоискСтиль 	= СтрНайти(ТекстСтрокиHTML,"style");
	Разница 	= ПоискСтиль - ПоискВысота;

	Если ПоискВысота > 0 Тогда
		СтрокаДляЗамены = Сред(ТекстСтрокиHTML, ПоискВысота, Разница-1);
		СтрокаЗамены 	= "height='"+Элементы.Состав.ТекущиеДанные.Высота+"'";
	КонецЕсли;
	ТекстСтрокиHTML = СтрЗаменить(ТекстСтрокиHTML, СтрокаДляЗамены, СтрокаЗамены); 
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы

//Открывает окно для ввода текста
//
&НаКлиенте
Процедура КомандаВвестиТекст(Команда)
	Структура = Новый Структура("Редактируется, Новыйтекст", Не Элементы.ГруппаРедактирования.видимость, Истина);
	УстановитьВидимость(Структура);	
	ЭтоЗаголовок 		= Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьТекст(Команда)
	
	Если ЗначениеЗаполнено(ТекстСтроки) Тогда
		Структура = Новый Структура;
		Если Редактировать Тогда
			НомерТекущейСтроки = Элементы.Состав.ТекущиеДанные.НомерСтроки; 		
		КонецЕсли;
		Структура.Вставить("НомерСтроки"	, НомерТекущейСтроки);
		
		ДобавитьСтрокуТаблицы(Структура);

		Объект.ОсновнойТекст = СформироватьОсновнойТекст();
		
		Структура = Новый Структура("Редактируется, Новыйтекст", Ложь, Истина);
		УстановитьВидимость(Структура);

		Редактировать		= Ложь;	
		Модифицированность 	= Истина;
		
	КонецЕсли;
	
КонецПроцедуры

//Открывает диалог загрузки новой картинки/файла
//
&НаКлиенте
Процедура КомандаЗагрузитьКартинку(Команда)
	Диалог = новый ПараметрыДиалогаПомещенияФайлов("Выберите файл картинки", Ложь,);
		
	Оповещение = новый ОписаниеОповещения("ПослеЗакрытияДиалогаВыбора", ЭтотОбъект);
	
	НачатьПомещениеФайлаНаСервер(Оповещение,,,, Диалог, УникальныйИдентификатор);
	
КонецПроцедуры

//Выбирает картинку/файл из справочника
//
&НаКлиенте
Процедура КомандаДобавитьКартинку(Команда)
	ЗначениеОтбора = Новый Структура("ВладелецФайла", Объект.Ссылка);
	ПараметрыФормы = Новый Структура("Отбор"		, ЗначениеОтбора);
	
	ОткрытьФорму("Справочник.ЗаметкиФайлы.Форма.ФормаВыбора", ПараметрыФормы, ЭтотОбъект);
КонецПроцедуры

//Сохраняет картинку в файл
//
&НаКлиенте
Процедура КомандаСохранить(Команда)
	
	Если ЗначениеЗаполнено(Элементы.Состав.текущиеДанные.Картинка) Тогда
		Расширение = "jpg";
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ДиалогОткрытияФайла.ПолноеИмяФайла 	= Объект.Наименование;
		ДиалогОткрытияФайла.Расширение 		= Расширение;
		ДиалогОткрытияФайла.Заголовок 		= "Укажите каталог для сохранения файла";

		Оповещение = Новый ОписаниеОповещения("ПослеВыбораКаталогаСохраненияФайла", ЭтотОбъект, ДиалогОткрытияФайла);

		ДиалогОткрытияФайла.Показать(Оповещение);
	КонецЕсли;
	
КонецПроцедуры

#Область ФорматированияТекста
//Изменяет выделенный текст на жирный
//
&НаКлиенте
Процедура КомандаЖирный(Команда)
    Структура = СформироватьСтруктуруФорматированияТекста();
    Структура.Вставить("Символ", "b");
    
	ИзменитьВыделенное(Структура);
КонецПроцедуры

//Изменяет выделенный текст на курсив
//
&НаКлиенте
Процедура КомандаКурсив(Команда)
	Структура = СформироватьСтруктуруФорматированияТекста();
	Структура.Вставить("Символ", "i");
	
	ИзменитьВыделенное(Структура);
КонецПроцедуры

//Изменяет выделенный текст на поддчеркнутый
//
&НаКлиенте
Процедура КомандаПодчеркнутый(Команда) 
	Структура = СформироватьСтруктуруФорматированияТекста();
	Структура.Вставить("Символ", "u");
	
	ИзменитьВыделенное(Структура);
КонецПроцедуры

//Изменяет выделенный текст на зачеркнутый
//
&НаКлиенте
Процедура КомандаЗачеркнутый(Команда)
	Структура = СформироватьСтруктуруФорматированияТекста();
	Структура.Вставить("Символ", "s");
	
	ИзменитьВыделенное(Структура);
КонецПроцедуры

&НаКлиенте
Процедура КомандаMark(Команда)
	Структура = СформироватьСтруктуруФорматированияТекста();
	Структура.Вставить("Символ", "mark");
	
	ИзменитьВыделенное(Структура);
КонецПроцедуры

//Добавляет к выделенному тексту <
//
&НаКлиенте
Процедура КомандаЗнакМеньше(Команда) 	
	Структура = Новый Структура;
	Структура.Вставить("Символ"			, "&lt; ");
	Структура.Вставить("Одиночный"		, Истина);
	Структура.Вставить("Спесимвол"		, Истина);
	Структура.Вставить("МестоВставки"	, "Перед");
	Структура.Вставить("Заголовок"		, Ложь);
	ИзменитьВыделенное(Структура);
КонецПроцедуры

//Добавляет к выделенному тексту >
//
&НаКлиенте
Процедура КомандаЗнакБольше(Команда)
	Структура = Новый Структура;
	Структура.Вставить("Символ"			, " &gt;");
	Структура.Вставить("Одиночный"		, Истина);
	Структура.Вставить("Спесимвол"		, Истина);
	Структура.Вставить("МестоВставки"	, "После");
	Структура.Вставить("Заголовок"		, Ложь);
	ИзменитьВыделенное(Структура);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура КомандаВставкаСсылки(Команда)
	Оповещение = Новый ОписаниеОповещения("ПослеВыбораСсылки", ЭтотОбъект);
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ВыделенныйТекс", Элементы.ТекстСтроки.ВыделенныйТекст);
	ОткрытьФорму("Справочник.Заметки.Форма.ФормаВводаСсылки", ПараметрыОткрытия, , Новый УникальныйИдентификатор(),,,Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗакрытьПредпросмотр(Команда)
	Элементы.ГруппаПредпросмотр.Видимость 	= Ложь;
КонецПроцедуры

&НаКлиенте
Процедура КомандаОписание(Команда) 
	
	мВыделенныйТекст = Элементы.ТекстСтроки.ВыделенныйТекст;	
	Если Не мВыделенныйТекст = "" Тогда
		НомерВставки = СтрНайти(Элементы.Состав.ТекущиеДанные.Значение, мВыделенныйТекст);
		НомерВставки = НомерВставки + СтрДлина(мВыделенныйТекст) + 1; 

		ПараметрыВставки = Новый Структура();
		ПараметрыВставки.Вставить("ТекСтрока"		, Элементы.Состав.ТекущаяСтрока);  
		ПараметрыВставки.Вставить("Выделенныйтекст"	, мВыделенныйТекст);
		ПараметрыВставки.Вставить("НомерВставки"	, НомерВставки);
		
		Оповещение = Новый ОписаниеОповещения("ПослеВыбораОписания", ЭтотОбъект, ПараметрыВставки);
		ОткрытьФорму("Справочник.Заметки.Форма.ФормаОписания", ПараметрыВставки, , Новый УникальныйИдентификатор(),,,Оповещение);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаH1(Команда)
	Структура = Новый Структура("Редактируется, Новыйтекст", Истина, Истина);
	УстановитьВидимость(Структура);	
	ЭтоЗаголовок = ПредопределенноеЗначение("Справочник.Тэги.H1");
КонецПроцедуры

&НаКлиенте
Процедура КомандаH2(Команда)
	Структура = Новый Структура("Редактируется, Новыйтекст", Истина, Истина);
	УстановитьВидимость(Структура);	
	ЭтоЗаголовок = ПредопределенноеЗначение("Справочник.Тэги.H2");
КонецПроцедуры

&НаКлиенте
Процедура КомандаH3(Команда)
	Структура = Новый Структура("Редактируется, Новыйтекст", Истина, Истина);
	УстановитьВидимость(Структура);	
	ЭтоЗаголовок = ПредопределенноеЗначение("Справочник.Тэги.H3");	
КонецПроцедуры

&НаКлиенте
Процедура КомандаH4(Команда)
	Структура = Новый Структура("Редактируется, Новыйтекст", Истина, Истина);
	УстановитьВидимость(Структура);	
	ЭтоЗаголовок = ПредопределенноеЗначение("Справочник.Тэги.H4");
КонецПроцедуры

&НаКлиенте
Процедура КомандаH5(Команда)
	Структура = Новый Структура("Редактируется, Новыйтекст", Истина, Истина);
	УстановитьВидимость(Структура);	
	ЭтоЗаголовок = ПредопределенноеЗначение("Справочник.Тэги.H5");
КонецПроцедуры

&НаКлиенте
Процедура КомандаH6(Команда)
	Структура = Новый Структура("Редактируется, Новыйтекст", Истина, Истина);
	УстановитьВидимость(Структура);	
	ЭтоЗаголовок = ПредопределенноеЗначение("Справочник.Тэги.H6");
КонецПроцедуры

&НаКлиенте
Процедура КомандаСписки(Команда)
	Оповещение = Новый ОписаниеОповещения("ПослеФормыВводаСписка", ЭтотОбъект,);
	ОткрытьФорму("Справочник.Заметки.Форма.ФормаВводаСписка",,,,,,Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура КомандаТаблица(Команда)
	Оповещение = Новый ОписаниеОповещения("ПослеФормаВводаТаблицы", ЭтотОбъект,);
	ОткрытьФорму("Справочник.Заметки.Форма.ФормаВводаТаблицы",,,,,,Оповещение);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область КартинкаФайл
//Обработка выбора картинки/файла
//
&НаКлиенте
Процедура ПослеЗакрытияДиалогаВыбора (ОписаниеФайла, ДопПараметры) Экспорт
	
	Если ОписаниеФайла = Неопределено Тогда
		Возврат;
	КОнецЕсли;
	
	СсылкаНаОбъект 	= Объект.Ссылка;
	Расширение 		= ОписаниеФайла.СсылкаНаФайл.Расширение;
	Структура 		= Новый Структура();
	Структура.Вставить("Адрес", 		ОписаниеФайла.Адрес);
	Структура.Вставить("Владелец", 		СсылкаНаОбъект);
	Структура.Вставить("Имя", 			ОписаниеФайла.СсылкаНаФайл.Файл.ИмяБезРасширения);
	Структура.Вставить("Расширение", 	Расширение);	
	 
	СсылкаФайл	= СохранитьФайлВХранилище(Структура);
	НомерСтроки = ПолучитьНомерСтрокиДляВставки();
	
	Структура = Новый Структура;
 	Структура.Вставить("ТекстДобавления", ОписаниеФайла.СсылкаНаФайл.Имя);
 	Структура.Вставить("НомерСтроки"	, НомерСтроки-1);
 	Структура.Вставить("Вставка"		, Истина);
 	Структура.Вставить("Тэг"			, ПолучитьТэгКартинки(Расширение));
 	Структура.Вставить("Картинка"		, СсылкаФайл);
 	
 	 ДобавитьСтрокуHTML(Структура); 
	
	Объект.ОсновнойТекст 	= СформироватьОсновнойТекст();	
	
	Модифицированность 		= Истина;

КонецПроцедуры

//Создает новый элеменет справочника ЗаметкиФайлы
//
&НаСервере
Функция СохранитьФайлВХранилище(Структура)
	
	НовФайл = Справочники.ЗаметкиФайлы.СоздатьЭлемент();
	НовФайл.ВладелецФайла 		= Структура.Владелец;
	НовФайл.Наименование 		= Структура.Имя;
	НовФайл.Расширение			= Структура.Расширение;
	НовФайл.ДатаСоздания 		= ТекущаяДатаСеанса();
	НовФайл.ФайлХранилище 		= Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(Структура.Адрес));
	
	НовФайл.Записать();
	
	Возврат НовФайл.Ссылка;
КонецФункции

//Определяем по расширнею картинка (img) это или файл (File)
//
&НаСервере
Функция ПолучитьТэгКартинки(Расширение)	
	
	Если ЭтоКартинка(Расширение) Тогда
		ТэгКартинки = Справочники.Тэги.img;
	Иначе
		ТэгКартинки = Справочники.Тэги.File;
	КонецЕсли;	
		
	Возврат ТэгКартинки;	
	
КонецФункции

//Определим картинку из списка расширений
//
&НаСервере
Функция ЭтоКартинка(Расширение)
	
	ЭтоКартинка = Ложь;
	
	Если Расширение = ".jpeg" 
		Или Расширение = ".jpg"
		Или Расширение = ".gif"
		Или Расширение = ".bmp"
		Или Расширение = ".svg"
		Или Расширение = ".png" Тогда
		
		ЭтоКартинка = Истина;	
	КонецЕсли;
			
	Возврат ЭтоКартинка;		
КонецФункции

//Добавляем данные по файлу в структуру - унификация 
//
&НаСервере
Функция СформироватьСтруктуруДляВставкиФайла(СсылкаФайл)
	НомерСтроки = ПолучитьНомерСтрокиДляВставки();
	
	Структура = Новый Структура();	
 	Структура.Вставить("ТекстДобавления", СсылкаФайл.Наименование);
 	Структура.Вставить("НомерСтроки"	, НомерСтроки-1);
 	Структура.Вставить("Вставка"		, Истина);
 	Структура.Вставить("Тэг"			, ПолучитьТэгКартинки(СсылкаФайл.Расширение));
 	Структура.Вставить("Картинка"		, СсылкаФайл);

	Возврат Структура;
КонецФункции

//Получаем Base64Данные
//
&НаСервере
Функция Base64ДанныеСервер(Картинка)	
	Возврат Картинка.Base64Данные;
КонецФункции

//Оповещение команды Сохранить
//
&НаКлиенте
Процедура ПослеВыбораКаталогаСохраненияФайла(КаталогВыбор, Диалог) Экспорт
    
    Если КаталогВыбор = Неопределено Тогда
        Возврат;
    КонецЕсли;
    
    Если КаталогВыбор.Количество()=0 Тогда
        Возврат;
    КонецЕсли;
    
    ИмяФайла = КаталогВыбор[0];
    
   	Сведения =  ПолучитьСведенияОФайле(Элементы.Состав.ТекущиеДанные.Картинка);
    Если ЗначениеЗаполнено(Сведения.Наименование) И ЗначениеЗаполнено(Сведения.Расширение) Тогда
    	ИмяФайла = Диалог.Каталог + Сведения.Наименование + Сведения.Расширение;
    КонецЕсли;
    	
    ДвДанные= СсылкаНаДвоичныеДанныеФайла(Элементы.Состав.ТекущиеДанные.Картинка);
    
    Попытка
        ДвДанные.Записать(ИмяФайла);
        ПоказатьПредупреждение(,"Файл записан!");
    Исключение
        ПоказатьПредупреждение(,"Ошибка: " + ОписаниеОшибки() + ", записи файла. Файл не записан!");    
    КонецПопытки;
    
КонецПроцедуры

//Получаем ДвоичныеДанные
//
&НаСервере
Функция СсылкаНаДвоичныеДанныеФайла(Картинка)
	  
  Возврат Картинка.ФайлХранилище.Получить();
 
КонецФункции

//Получаем сведения о файле
//
&НаСервере
Функция ПолучитьСведенияОФайле(Картинка)
	
	Структура = Новый Структура();
	Структура.Вставить("Наименование",	Картинка.Наименование);
	Структура.Вставить("Расширение",	Картинка.Расширение);
	
	Возврат Структура;

КонецФункции

#КонецОбласти

#Область Изменить
 
 &НаКлиенте
 Процедура ИзменитьТекстСтрокиHTML(ТекстВставки, ЭтоКартинка)
	 	 
	 Если ЭтоКартинка Тогда
	 	ТекстСтроки 		= "Картинка"; 	
	 Иначе
	 	ТекстСтроки 		= СтрЗаменить(ТекстВставки,"<br>", Символы.ПС);
		ТекстВставки 		= СтрЗаменить(ТекстВставки, Символы.ПС, "<br>");
	 КонецЕсли;
	  	 
	 ТекстСтрокиHTML 	= ВставкаДляСтрокиТекста(ТекстВставки);    
	 
	 Если НЕ ЭтоКартинка Тогда	 
	 	ТекстСтроки 	= СтрЗаменить(ТекстВставки,"<br>", Символы.ПС); //Испр странный глюк
	 КонецЕсли;
	 
 КонецПроцедуры
  
// Изменить выделенное.
// Модифицирует выделенный текст по условия из структуры  
//  
&НаКлиенте
Процедура ИзменитьВыделенное(Структура)
	
	ВыделенныйТекстДо = Элементы.ТекстСтрокиРасширеннаяПодсказка.Родитель.ВыделенныйТекст;

	Если Не ВыделенныйТекстДо = "" Тогда //Если ВыделенныйТекст заполнен 
		Структура.Вставить("ВыделенныйТекстДо", ВыделенныйТекстДо);
		Если Структура.Одиночный Тогда
			ВыделенныйТекст = ТекстДляВставкиОдиночногоСимвола(Структура);	
		Иначе
			ВыделенныйТекст = ТекстДляВставкиДвойногоСимвола(Структура);
		КонецЕсли;

		Элементы.ТекстСтрокиРасширеннаяПодсказка.Родитель.ВыделенныйТекст = "";
		Элементы.ТекстСтрокиРасширеннаяПодсказка.Родитель.ВыделенныйТекст = ВыделенныйТекст;

	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Функция ТекстДляВставкиСпецсимвола(Структура)
	Если Структура.МестоВставки = "Перед" Тогда
		ВыделенныйТекст = Структура.Символ + Структура.ВыделенныйТекстДо;
	Иначе
		ВыделенныйТекст = Структура.ВыделенныйТекстДо + Структура.Символ;
	КонецЕсли;

	Возврат ВыделенныйТекст;
КонецФункции

&НаКлиенте
Функция ТекстДляВставкиОдиночногоСимвола(Структура)
	Если Структура.Спесимвол Тогда
		ВыделенныйТекст = ТекстДляВставкиСпецсимвола(Структура);
	Иначе
		ВыделенныйТекст = "<" + Структура.Символ + ">" + Структура.ВыделенныйТекстДо;
	КонецЕсли;
	Возврат ВыделенныйТекст;
КонецФункции

Функция ТекстДляВставкиДвойногоСимвола(Структура)
	Если Структура.Символ = "href" Тогда
		ВыделенныйТекст = "<a href=" + Структура.Адрес + ">" + Структура.Описание + "</a>";
	ИначеЕсли Структура.Заголовок Тогда
		ВыделенныйТекст = Структура.ВыделенныйТекстДо;
	Иначе
		ВыделенныйТекст = "<" + Структура.Символ + ">" + Структура.ВыделенныйТекстДо + "</" + Структура.Символ + ">";
	КонецЕсли;
	
	Возврат ВыделенныйТекст;
КонецФункции
	
#КонецОбласти

#Область НачальнаяСтраница
// Добавить начальную страницу HTML.
//Формируют пустую струткура Основного текста - HTML документа
//
&НаСервере
Процедура ДобавитьНачальнуюСтраницуHTML()
 	Структура = Новый Структура;
 	
 	Структура.Вставить("Вставка", Ложь); 
 	Структура.Вставить("НомерСтроки"	, 0);
  	Структура.Вставить("Тэг"			, Неопределено);
	
 	Структура.Вставить("ТекстДобавления", "<!DOCTYPE html>");
 	ДобавитьСтрокуHTML(Структура); 
 	
 	Структура.Вставить("ТекстДобавления", "<html lang=""ru"">");
 	ДобавитьСтрокуHTML(Структура); 
 	
 	ТекстДобавления = ДобавитьHead();
 		
 	Структура.Вставить("ТекстДобавления", ТекстДобавления);
 	ДобавитьСтрокуHTML(Структура); 
 	
 	Структура.Вставить("ТекстДобавления", "<body>");
 	ДобавитьСтрокуHTML(Структура); 
 	
 	Структура.Вставить("ТекстДобавления", "</body>");
 	ДобавитьСтрокуHTML(Структура); 
 	
 	Структура.Вставить("ТекстДобавления", "</html>");
 	ДобавитьСтрокуHTML(Структура); 
 
КонецПроцедуры
 
// Добавить head.
//Добавляет секцию head
// 
&НаСервере
Функция ДобавитьHead()
 	ТекстКоментария = "";
 	ТекстКоментария = ТекстКоментария + "<head>";
 	ТекстКоментария = ТекстКоментария + Символы.ПС + "	<meta charset=""UTF-8""" + ">";
 	ТекстКоментария = ТекстКоментария + Символы.ПС + "	<title>" + Объект.Наименование + "</title>";
 	ТекстКоментария = ТекстКоментария + Символы.ПС + "</head>";
 	
 	Возврат ТекстКоментария; 
КонецФункции
#КонецОбласти 
 
#Область ТекстДляВставки
//Добавляем данные текста в структуру
//
&НаСервере
Функция СформироватьСтруктуруДляВставки(ВыбранноеЗначение)
	НомерСтроки = ПолучитьНомерСтрокиДляВставки();
	
	Структура = Новый Структура();	
 	Структура.Вставить("ТекстДобавления", ВыбранноеЗначение.ВведенныйТекст);
 	Структура.Вставить("НомерСтроки"	, НомерСтроки-1);
 	Структура.Вставить("Вставка"		, Истина);
 	Структура.Вставить("Тэг"			, ВыбранноеЗначение.Тэг);

	Возврат Структура;
КонецФункции

#КонецОбласти

&НаКлиенте
Процедура ПослеФормыВводаСписка(Параметр, ДопПараметры) Экспорт
	Структура = Новый Структура();
	
	Если Параметр.Вид = ПредопределенноеЗначение("Перечисление.ВидыСписковHTML.Маркированный") Тогда
		Структура.Вставить("Тэг" , ПредопределенноеЗначение("Справочник.Тэги.ul"));
	ИначеЕсли  Параметр.Вид = ПредопределенноеЗначение("Перечисление.ВидыСписковHTML.Нумерованный") Тогда 	
		Структура.Вставить("Тэг" , ПредопределенноеЗначение("Справочник.Тэги.ol"));
	Иначе	
	
	КонецЕсли;
	
	Структура.Вставить("Строки"		, Параметр.Строки);
	
	ДобавитьСписокHTML(Структура); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеФормаВводаТаблицы(Параметр, ДопПараметры) Экспорт
	Структура = Новый Структура();
КонецПроцедуры	

&НаКлиенте
Процедура УстановитьВидимость(Структура)
 
	Элементы.ГруппаРедактирования.Видимость 	= Структура.Редактируется;
	Элементы.Состав.Видимость 					= Не Структура.НовыйТекст;	
	Элементы.ГруппаОсновнойТекст.Видимость 		= Не Структура.Редактируется;
	Элементы.ПредпросмотрHTML.Видимость  		= Структура.Редактируется;
	Элементы.ГруппаПоля.Видимость 				= Структура.Редактируется;
	
	текстСтроки 	= "";
	ТекстСтрокиHTML = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораСсылки(Параметр, ДопПараметры) Экспорт
	
	ВыделенныйТекст  = Элементы.ТекстСтроки.ВыделенныйТекст;
	
	Если ЗначениеЗаполнено(ВыделенныйТекст) Тогда
		Структура = Новый Структура;
		Структура.Вставить("Символ"			, "href");
		Структура.Вставить("Одиночный"		, Ложь);
		Структура.Вставить("Спесимвол"		, Ложь);
		Структура.Вставить("МестоВставки"	, Ложь);
		Структура.Вставить("Адрес"			, Параметр.Адрес);
		Структура.Вставить("Описание"		, Параметр.Описание);
		Структура.Вставить("Заголовок"		, Ложь);
		
		ИзменитьВыделенное(Структура);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораОписания(Параметр, ДопПараметры) Экспорт
	Если ЗначениеЗаполнено(Параметр.Описание) Тогда
		ID = "Описание_" + Элементы.Состав.ТекущаяСтрока;
		НомерОписания = НайтиНомерОписания(ID);
		Если НомерОписания = Неопределено Тогда
			ID = ID + "1";
		Иначе
			ID = "Описание_" + (Число(Сред(НомерОписания, 10)) + 1);
		КонецЕсли;
		НоваяСтрока = Объект.Примечания.Добавить();
		НоваяСтрока.id 			= ID;
		НоваяСтрока.Вид 		= ПредопределенноеЗначение("Перечисление.ВидыПримечаний.Описание");
		НоваяСтрока.Текстовка 	= Параметр.Описание;
		
		ТекстСтроки = Лев(Элементы.Состав.ТекущиеДанные.Значение, ДопПараметры.НомерВставки-1) 
			+ "<a href='#" + ID +"'> (о) </a>" 
			+ Сред(Элементы.Состав.ТекущиеДанные.Значение,  ДопПараметры.НомерВставки - 1, СтрДлина(ДопПараметры.Выделенныйтекст)); 
		
		Модифицированность = Истина;
		
	КонецЕсли;	
КонецПроцедуры	

&НаСервере
Функция НайтиНомерОписания(ID)
	
	НомерОписания = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаметкиПримечания.id
		|ИЗ
		|	Справочник.Заметки.Примечания КАК ЗаметкиПримечания
		|ГДЕ
		|	ЗаметкиПримечания.Вид = &Вид
		|	И ЗаметкиПримечания.Ссылка = &Ссылка
		|	И ЗаметкиПримечания.id Подобно &id";
	
	Запрос.УстановитьПараметр("id"		, "%"+id+"%");
	Запрос.УстановитьПараметр("Ссылка"	, Объект.Ссылка);
	Запрос.УстановитьПараметр("Вид"		, Перечисления.ВидыПримечаний.Описание);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НомерОписания = ВыборкаДетальныеЗаписи.id;
	КонецЦикла;

	Возврат НомерОписания;
	
КонецФункции

// Добавить строку HTML.
// Новая строка в ТЧ 
//Параметр - Структура
//формируется функцией СформироватьСтруктуруДляВставки 
//или вручную:
//Вставка 			- булево
//НомерСтроки     	- число 
//Тэг 				- спр. Тэги
//Картинка 			- хранилище значений (необязательно)
//ТекстДобавления 	- строка  
//
&НаСервере
Процедура ДобавитьСтрокуHTML(Структура)
 	Если Структура.Вставка Тогда
 		НоваяСтрока = Объект.Состав.Вставить(Структура.НомерСтроки);
 	Иначе	
 		НоваяСтрока = Объект.Состав.Добавить();	
 	КонецЕсли;
 	
 	Если ЗначениеЗаполнено(Структура.Тэг) Тогда
		Если Структура.Тэг.Наименование = "img" Или Структура.Тэг.Наименование = "file" Тогда
			Если Структура.Свойство("Картинка") Тогда
				НоваяСтрока.Картинка = Структура.Картинка;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
 			
 	НоваяСтрока.Значение = Структура.ТекстДобавления; 
	Если Не Структура.Тэг = Неопределено Тогда  
 		НоваяСтрока.Тэг      = Структура.Тэг;
	КонецЕсли;
	
	СоставВТаблицу();
 КонецПроцедуры
 
 &НаСервере
Процедура ДобавитьСписокHTML(Структура)
	
	Если Структура.Строки.Количество() > 0 Тогда
		НомерТекущейСтроки 	= ПолучитьНомерСтрокиДляВставки();
		НоваяСтрока 		= Объект.Состав.Вставить(НомерТекущейСтроки-1);

		Если Структура.Тэг = ПредопределенноеЗначение("Справочник.Тэги.ul") Тогда
			ТексДляВставки = "<ul>";
		ИначеЕсли Структура.Тэг = ПредопределенноеЗначение("Справочник.Тэги.ol") Тогда
			ТексДляВставки = "<ol>";
		КонецЕсли;

		Для Каждого СтрокаМассива Из Структура.Строки Цикл
			ТексДляВставки =  ТексДляВставки + " <li>" + СтрокаМассива + "</li>";
		КонецЦикла;

		Если Структура.Тэг = ПредопределенноеЗначение("Справочник.Тэги.ul") Тогда
			ТексДляВставки = ТексДляВставки + "</ul>";
		ИначеЕсли Структура.Тэг = ПредопределенноеЗначение("Справочник.Тэги.ol") Тогда
			ТексДляВставки = ТексДляВставки + "</ol>";
		КонецЕсли;

		НоваяСтрока.Значение = ТексДляВставки;
		
		Модифицированность = Истина;
		
		Объект.ОсновнойТекст = СформироватьОсновнойТекст();
		 
	КонецЕсли;
	
КонецПроцедуры
	
// Сформировать основной текст.
// Формирует страницу html
//
&НаСервере
Функция СформироватьОсновнойТекст()
	
	ОсновнойТекст 	= "";	
	ТабИзмСтрок 	= УдалитьСоставВТаблицу();	 
	ОсновнойТекст 	= ОсновнойТекстHTMLСервер.ПолучитьОсновнойТекстИзТаблицы(ТабИзмСтрок);
	
	Возврат ОсновнойТекст;
	
КонецФункции

// Вставки для строки текста.
// Формирует мини страницу html для строки ТЧ
// 
&НаСервере
Функция ВставкаДляСтрокиТекста(ТекстВставки)
	ТекстДляВставки = "";
	
	ТекстДляВставки = "<!DOCTYPE html>"
	+ "<html lang=""ru"">"
	+ "<head>" 
	+ "	<meta charset=""UTF-8""" + ">"
	+ "	<title> </title>"
	+ "</head>"
	+"<body>"
	+ ТекстВставки
	+ "</body>" 
	+ "</html>"
	;
	
	Возврат ТекстДляВставки
	
КонецФункции 	

 //Формирует значения/условия данных для изменения  
 //
 &НаКлиенте
 Функция СформироватьСтруктуруФорматированияТекста()
 	Структура = Новый Структура();
 	Структура.Вставить("Одиночный"		, Ложь);
 	Структура.Вставить("Спесимвол"		, Ложь);
 	Структура.Вставить("МестоВставки"	, Ложь);
 	Структура.Вставить("Заголовок"		, Ложь);
 	
 	Возврат Структура;
 КонецФункции
 
//Возвращаем значение
//	 
&НаСервере
 Функция ОдиночныйТэг(Тэг)
  	
  	Возврат Тэг.Одиночный;
  	
 КонецФункции
  
// Получить номер строки для вставки.
// Ищет номер строки перед закрытие секции body
//
&НаСервере
Функция ПолучитьНомерСтрокиДляВставки()
	
	Отбор = Новый Структура();
	Отбор.Вставить("Значение", "</body>");
	 
	ПоискБоди = Объект.Состав.НайтиСтроки(Отбор);
	//ПоискБоди = мТаблицаСостав.НайтиСтроки(Отбор);
	Если ПоискБоди = Неопределено Тогда
		НомерСтроки = ПолучитьКоличествоСтрокПолей();
	Иначе
		НомерСтроки = ПоискБоди[0].НомерСтроки	
	КонецЕсли;			
	
	Возврат НомерСтроки;
	
КонецФункции

// Получить количество строк ТЧ Состав.
// 
&НаСервере
Функция ПолучитьКоличествоСтрокПолей()
	Возврат Объект.Состав.Количество();
КонецФункции

//Заполняем Лекцию из Темы
//
&НаСервере
Процедура ТемаПриИзмененииНаСервере()
	Объект.Лекция = Объект.Тема.Лекция;
КонецПроцедуры

&НаСервере
Функция ПолучитьОписаниеИзСтроки(СтрокаОписания)
	
	Описание = "";
	ПоискИД = СтрНайти(СтрокаОписания, "#");
	Если ПоискИД > 0 Тогда                        
		ИД = Сред(СтрокаОписания, ПоискИД + 1); 
		Отбор = Новый Структура;
		Отбор.Вставить("id", ИД);
		МассивОтбора = Объект.Примечания.НайтиСтроки(Отбор);
		Если МассивОтбора.Количество()> 0 Тогда  
			 СтрокаОтбора 	= МассивОтбора.Получить(0);
			 Описание 		= СтрокаОтбора.Текстовка;
		КонецЕсли;	
	КонецЕсли;
	
	Возврат Описание;  
	
КонецФункции

&НаСервере
Процедура ДобавитьСтрокуТаблицы(Структура)

	Если Редактировать Тогда
		НоваяСтрока = мТаблицаСостав.Получить(Структура.НомерСтроки-1); 
	Иначе
		НомерСтроки = ПолучитьНомерСтрокиДляВставки()-1; //получаем номер, - 1 индекс
		НоваяСтрока = мТаблицаСостав.Вставить(НомерСтроки);
	КонецЕсли;

	НоваяСтрока.Значение 	= ТекстСтроки;
	Если ЗначениеЗаполнено(ЭтоЗаголовок) Тогда
		НоваяСтрока.Тэг = ЭтоЗаголовок;
	ИначеЕсли Не ЗначениеЗаполнено(НоваяСтрока.Тэг) Тогда 	
		НоваяСтрока.Тэг = ПредопределенноеЗначение("Справочник.Тэги.p")	
	КонецЕсли;	

	ТаблицуВСостав(мТаблицаСостав);
	
КонецПроцедуры

&НаСервере
Функция УдалитьСоставВТаблицу()
	Возврат Объект.Состав.Выгрузить();
КонецФункции

&НаСервере
Процедура СоставВТаблицу()
	
	Табл = РеквизитФормыВЗначение("мТаблицаСостав");
	Табл = Объект.Состав.Выгрузить();
	ЗначениеВРеквизитФормы(Табл, "мТаблицаСостав");
	
КонецПроцедуры

&НаСервере
Процедура ТаблицуВСостав(Таблица)
	Табл = РеквизитФормыВЗначение("мТаблицаСостав");
	Объект.Состав.Загрузить(Табл);
КонецПроцедуры 
		
#КонецОбласти
